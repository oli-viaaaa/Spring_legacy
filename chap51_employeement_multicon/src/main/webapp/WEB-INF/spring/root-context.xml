<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 다음 base-package에 있는 클래스들을 빈으로 생성 -->
	<context:component-scan base-package="com.javalab.service"></context:component-scan>
									
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
   	    <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
	    <property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:orcl"/>
	    <property name="username" value="hr2"/>
	    <property name="password" value="1234"/>
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="hikariConfig" />
	</bean>		

	<!-- [매퍼 인터페이스(Dao 인터페이스) 설정 방법.1 - 특정한 인터페이스만 매퍼인터페이스로 인식 가능 옵션] -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
		<!-- 매퍼 인터페이스가 들어있는 경로.그 지정된 경로 안의 모든 인터페이스들은 매퍼 인터페이스 자격 -->
		<!-- <property name="basePackage" value="com.javalab.dao" /> 
	</bean> -->

	<!-- [매퍼 인터페이스(Dao 인터페이스) 설정 방법.2 - 베이스 패키지 하위의 모든 인터페이스를 매퍼인터페이스로 인식] -->
	<mybatis-spring:scan base-package="com.javalab.dao"/>

	<!-- 마이바티스는 SqlSession을 통해서 모든 데이터베이스 관련 작업을 처리함.
		 SqlSessionFactoryBean은 sqlSession을 생산하는 역할을 함.  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
 		<!-- 매퍼.xml(SQL쿼리문) 위치 설정 --> 
		<property name="mapperLocations" value="classpath:mapper/oracle/*Mapper.xml" />
		<!-- SQL문 실행결과를 받아오거나 파라미터 전달할 때 사용할 vo들의 위치 -->
		<property name="typeAliasesPackage" value="com.javalab.vo"></property>
		<!-- vo의 필드명과 SQL문의 select절의 컬럼명이 다를 경우의 처리 -->
		<property name="configuration">
			<bean class="org.apache.ibatis.session.Configuration">
				<property name="mapUnderscoreToCamelCase" value="true"/>
			</bean>
		</property>
	</bean>	

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

		
</beans>
